!function(){"use strict";const e=1616443069329,n=`cache${e}`,a=["/client/client.f422fc8f.js","/client/inject_styles.5607aec6.js","/client/index.2e071538.js","/client/Social.5fd20795.js","/client/sideprojects.764904c6.js","/client/healthcare.842ea56e.js","/client/fooddes.01ec2e78.js","/client/about.31380f67.js","/client/index.c523fc27.js","/client/[slug].10fc9c9a.js","/client/vote.735708c0.js","/client/cfm.b0f7e6d3.js"].concat(["/service-worker-index.html","/CNAME","/SavannahJoyner_Resume.pdf","/SavannahJoyner_Resume.zip","/global.css","/images/1553538007167.jpg","/images/bog.png","/images/box_girl.MP4","/images/cfm_mock.png","/images/complete.png","/images/cropped2.jpg","/images/dataviz_mock.png","/images/download.png","/images/facebook-icon.png","/images/favicon.png","/images/healthcare_mock.png","/images/heroimage.png","/images/home.png","/images/home1.png","/images/instagram-icon.png","/images/linkedin-icon.png","/images/logo-192.png","/images/logo-512.png","/images/nebo.png","/images/network.png","/images/service1.png","/images/service2.png","/images/service3.png","/images/snapchat-icon.png","/images/twitter-icon.png","/images/unnamed.jpg","/images/user1.jpg","/images/user2.jpg","/images/vote_mock.png","/images/wave1.png","/images/wave2.png","/images/whatsapp-icon.png","/manifest.json"]),s=new Set(a);self.addEventListener("install",(e=>{e.waitUntil(caches.open(n).then((e=>e.addAll(a))).then((()=>{self.skipWaiting()})))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((async e=>{for(const a of e)a!==n&&await caches.delete(a);self.clients.claim()})))})),self.addEventListener("fetch",(n=>{if("GET"!==n.request.method||n.request.headers.has("range"))return;const a=new URL(n.request.url),t=a.protocol.startsWith("http"),i=a.hostname===self.location.hostname&&a.port!==self.location.port,c=a.host===self.location.host&&s.has(a.pathname),o="only-if-cached"===n.request.cache&&!c;!t||i||o||n.respondWith((async()=>c&&await caches.match(n.request)||async function(n){const a=await caches.open(`offline${e}`);try{const e=await fetch(n);return a.put(n,e.clone()),e}catch(e){const s=await a.match(n);if(s)return s;throw e}}(n.request))())}))}();
